name: CI Pipeline

on:
  push:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repo
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest
      
      # Step 4: Create uploads directory
      - name: Create uploads directory
        run: mkdir -p uploads

      # Step 5: Run unit tests
      - name: Run pytest
        run: pytest tests/

  docker:
    runs-on: ubuntu-latest
    needs: test   # only build docker if tests pass

    steps:
      # Step 1: Checkout repo
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Docker Buildx (better caching)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Build Docker image
      - name: Build Docker image
        run: docker compose build

      # Step 4: Run Docker container
      - name: Run Docker container
        run: |
          docker compose up -d
          sleep 10   # wait for container to start
          docker ps -a
          curl --fail http://127.0.0.1:5000 || (docker logs regression_trainer_app && exit 1)

      # Step 5: Stop and clean up
      - name: Tear down
        run: docker compose down --volumes --remove-orphans
